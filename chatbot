using System;
using System.Collections.Generic;

namespace kea_part1
{
    public class Chatbot
    {
        private Dictionary<string, List<string>> keywordResponses;  // Store responses for each keyword
        private Dictionary<string, string> sentimentResponses;  // Store responses for different sentiments

        // Constructor to initialize the responses
        public Chatbot()
        {
            InitializeResponses();
        }

        // Method to generate a response based on user input
        public string GenerateResponse(string userInput)
        {
            // Detect sentiment and respond if matched
            string sentimentResponse = DetectSentiment(userInput);
            if (!string.IsNullOrEmpty(sentimentResponse))
            {
                return sentimentResponse; // Return sentiment-based response
            }

            // Process the user input and match it to keywords
            string loweredInput = userInput.ToLower();
            foreach (var keyword in keywordResponses.Keys)
            {
                if (loweredInput.Contains(keyword))
                {
                    return GetRandomResponse(keyword); // Return a random response for the matched keyword
                }
            }

            // Default response if no match is found
            return "I'm not sure how to help with that. Try asking about password safety, phishing, or privacy.";
        }

        // Method to detect sentiment from user input
        private string DetectSentiment(string userInput)
        {
            foreach (var sentiment in sentimentResponses.Keys)
            {
                if (userInput.Contains(sentiment))
                {
                    return sentimentResponses[sentiment]; // Return the sentiment-based response
                }
            }
            return string.Empty; // If no sentiment matched, return an empty string
        }

        // Initialize responses for keywords and sentiments
        private void InitializeResponses()
        {
            // Keyword-based responses (example: password, phishing, privacy)
            keywordResponses = new Dictionary<string, List<string>>
            {
                { "password", new List<string>
                    {
                        "Make sure to use strong, unique passwords for each account.",
                        "Avoid using personal information in your passwords.",
                        "Consider using a password manager for security."
                    }
                },
                { "phishing", new List<string>
                    {
                        "Be cautious of emails that ask for personal information.",
                        "Always verify email links before clicking.",
                        "Report phishing emails and delete them immediately."
                    }
                },
                { "privacy", new List<string>
                    {
                        "Be mindful of the personal information you share online.",
                        "Review the privacy settings of your social media accounts regularly.",
                        "Use a VPN to keep your internet activity private."
                    }
                }
            };

            // Sentiment-based responses (e.g., worried, curious, frustrated)
            sentimentResponses = new Dictionary<string, string>
            {
                { "worried", "It's understandable to feel worried. Cyber threats can be intimidating, but we can take steps to protect ourselves." },
                { "scared", "I know cybersecurity can seem scary, but you're not alone! I’ll help guide you." },
                { "curious", "I’m glad you’re curious! Knowledge is the key to online safety. Let’s dive deeper." },
                { "frustrated", "I know this topic can be frustrating, but you're doing great! Let's tackle this step by step." }
            };
        }

        // Get a random response from a list of responses for the given keyword
        private string GetRandomResponse(string keyword)
        {
            var responses = keywordResponses[keyword];
            Random rand = new Random();
            return responses[rand.Next(responses.Count)];
        }
    }
}
